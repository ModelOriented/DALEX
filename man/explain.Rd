% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/explain.R
\name{explain.default}
\alias{explain.default}
\alias{explain}
\title{Create Model Explainer}
\usage{
explain.default(model, data = NULL, y = NULL,
  predict_function = yhat, link = I, ..., label = tail(class(model),
  1))

explain(model, data = NULL, y = NULL, predict_function = yhat,
  link = I, ..., label = tail(class(model), 1))
}
\arguments{
\item{model}{object - a model to be explained}

\item{data}{data.frame or matrix - data that was used for fitting. If not provided then will be extracted from the model}

\item{y}{numeric vector with outputs / scores. Currently used only by \code{variable_dropout()} explainer.}

\item{predict_function}{function that takes two arguments: model and new data and returns numeric vector with predictions}

\item{link}{function - a transformation/link function that shall be applied to raw model predictions}

\item{...}{other parameters}

\item{label}{character - the name of the model. By default it's extracted from the 'class' attribute of the model}
}
\value{
An object of the class 'explainer'.

It's a list with following fields:

\itemize{
\item \code{model} the explained model
\item \code{data} the dataset used for training
\item \code{predict_function} function that may be used for model predictions, shall return a single numerical value for each observation.
\item \code{class} class/classes of a model
\item \code{label} label, by default it's the last value from the \code{class} vector, but may be set to any character.
}
}
\description{
Black-box models may have very different structures.
This function creates a unified representation of a model, which can be further processed by various explainers.
}
\details{
Please NOTE, that the \code{model} is actually the only required argument.
But some explainers may require that others will be provided too.
}
\examples{
library("breakDown")

wine_lm_model4 <- lm(quality ~ pH + residual.sugar + sulphates + alcohol, data = wine)
wine_lm_explainer4 <- explain(wine_lm_model4, data = wine, label = "model_4v")
wine_lm_explainer4

 \dontrun{
library("randomForest")
wine_rf_model4 <- randomForest(quality ~ pH + residual.sugar + sulphates + alcohol, data = wine)
wine_rf_explainer4 <- explain(wine_rf_model4, data = wine, label = "model_rf")
wine_rf_explainer4
 }

}
